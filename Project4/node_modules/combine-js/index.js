'use strict';

var fs = require('fs'),
	type = require('yamoo9-check-type'),
	minify = require('minify');

module.exports = function (input, output, min, encoding) {
	var input_type = type(input);

	if( input_type !== 'string' && input_type !=='array') {
		throw console.error('병합하고자 하는 JS 파일 문자열 또는 리스트(배열)를 전달해야합니다.')
	}

	if (input_type === 'string') {
		input = input.split(',').map(function (item, index) {
			return item.trim();
		});
	}

	min = (
			type(min) === 'null' ||
			type(min) === 'undefined' ||
			min === true
		) ? true : false;

	var output_dir = output.split('/');
	output_dir = output_dir.slice(0, output_dir.length -1 ).join('/');

	var combine_data = '',
		option  = {'encoding' : (encoding || 'utf-8')}

	fs.mkdir(output_dir, function () {
		input.forEach(function (file, index) {
			fs.readFile(file, option, function(err, data) {
				combine_data += data + '\n\n';
				if(index === input.length -1) {
					fs.writeFileSync(output, combine_data, option);
				}
			});
		});
		if (min) {
			minify(output, function  (error, data) {
				if(error){throw console.error(error.message);}
				output_rename = output.replace('.js', '.min.js');
				fs.writeFileSync(output.replace('.js', '.min.js'), data, option);
			});
		}
	});
}